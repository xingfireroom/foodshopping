<?php
namespace Home\Model;
use Think\Model;
class ClassViewModel extends Model{
    //查询当前分类信息
    public function findClass($cid){
        $c = M("classify");
        $map['cid'] = $cid;
        return $class = $c -> field("cid,cname,concat(cpath,'-',cid) as bpath") -> find($map['cid']);
    }

	//查询当前分类的子分类
	public function childClass($cid){
		$c = M("classify");
        $map['parentid'] = array('eq',$cid);
        return $class = $c -> where($map) -> field("cid,cname,concat(cpath,'-',cid) as bpath") -> order('cid asc') -> select();
	}

    //查询当前分类的所有子分类
    public function allChild($cid){
        $curr = $this -> findClass($cid);
        $c = M("classify");
        $path['cpath'] = array("like","{$curr['bpath']}%");
        return $child = $c -> where($path) -> field("cid,cname,concat(cpath,'-',cid) as bpath") -> order('bpath asc') ->select();
    }

    //查询当前分类的所有父级
    public function allParent($cid){
        $curr = $this->findClass($cid);
        $path = explode('-', $curr['bpath']);
        foreach ($path as $value) {
            if ($value != 0) {
                $parent[] =  $this->findClass($value);
            }            
        }
        return $parent;
    }

    //查询指定分类下得所有最末分类
    public function childEnd($cid){
        $c = M("classify");
        $curr = $this -> allChild($cid);
        foreach ($curr as $k => $v) {
            $bottom['cpath'] = array('like',"%{$v['bpath']}");
            if (!$c->where($bottom)->select()) {
                 $class[] = $v;
            }
        }
        return $class;
    }

    //通过分类查询属于本分类的品牌
    public function classBrand($cid){
        $c = D('BrandClassView');
        return $c -> where("cid = $cid") -> order("brandpic desc") -> select();
    }

    //查询指定分类下的所有品牌
    public function childBrand($cid){
        $c = M("classify");
        $class = $this -> allChild($cid);
        $class['curr'] = $this -> findClass($cid);
        foreach ($class as  $value) {
            $brand = $this -> classBrand($value['cid']);
            foreach ($brand as $value) {
                $brands[] = $value;
            }
        }
        return arr_unique($brands);
    }
}